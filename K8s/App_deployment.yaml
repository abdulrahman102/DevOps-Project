kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-1
spec:
  storageClassName: gp2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask-app
          image: 269053166710.dkr.ecr.us-east-1.amazonaws.com/sprints/flask_app:100
          env:
            - name: MYSQL_DATABASE_USER
              valueFrom:
                configMapKeyRef:
                  name: app-configmap
                  key: MYSQL_DATABASE_USER
            - name: MYSQL_DATABASE_DB
              valueFrom:
                configMapKeyRef:
                  name: app-configmap
                  key: MYSQL_DATABASE_DB
            - name: MYSQL_DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-configmap
                  key: MYSQL_DATABASE_HOST
            - name: MYSQL_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-password
                  key: DB-PASSWORD

          volumeMounts:
            - name: data-volume
              mountPath: /Flaskapp
              
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: pvc-1
---
apiVersion: v1
kind: Service
metadata:
  name: app-service
spec:
  selector:
    app: flask-app
  ports:
    - protocol: TCP
      port: 5002  # Exposed port in your container
      targetPort: 5002 
  type: ClusterIP  # Use a different type if needed
